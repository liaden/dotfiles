[core]
    editor = nvim

[log]
  follow = true

[rerere]
    enabled = 1
    autoupdate = 1

[rebase]
	autoStash = true
	autoSquash = true

[alias]
    s = status
    ff = merge --ff-only

    ls = ls-files

    # git churn | head
    churn = !"f() { git log --all --find-copies --find-renames --name-only --format='format:' \"$@\" | awk 'NF{a[$0]++}END{for(i in a){print a[i], i}}' | sort -rn;};f"

    unstage = reset HEAD --
    stash-unstaged = status -k -uq
    pristine = !git reset --hard && git clean -ffdx

    expunge = !"f() { git filter-branch --force --index-filter \"git rm --cached --ignore-unmatch $1\" --prune-empty --tag-name-filter cat -- --all }; f"

    branches = branch -a
    statshes = stash list
    tags = tag -n1 --list

    recent = branch --sort=committerdate
    rearrange = "rebase -i $(git merge-base HEAD @{u})"

    freshen = commit --amend --no-edit --date=now
    append = commit --amend --no-edit

    d = diff --ignore-all-space

    last = log -1 HEAD -p
    file-rms = log --diff-filter=D --name-only
    deletions = log --diff-filter=D
    on = "!f() { git log --since=$1 --until=${2:$1}; }; f"

    ours   = !"f() { git checkout --ours $@ && git add $@; }; f"
    theirs = !"f() { git checkout --theirs $@ && git add $@; }; f"

    cherries = cherry -v
    unpicked = "!f() { \
        _u=\"${1:-$(git rev-parse @{u} 2> /dev/null)}\"; \
        git cherry \"${_u:-origin/master}\" | grep '^+' | sed 's/+ //';  };  \
        f"

    aliased = config --get-regexp ^alias\\.

    exec = !exec
    root = !pwd

[branch]
    autosetupmerge = always
    autosetuprebase = always
    autoStash = true
    autoSquash = true

[pull]
    rebase = true

[user]
	name = Joel Johnson
	email = johnson.joel.b@gmail.com

[blame]
    ignoreRevsFile = .git-blame-ignore-revs
    markIgnoredLines = true
    markUnblamableLines = true
